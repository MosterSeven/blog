(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{284:function(t,s,n){"use strict";n.r(s);var a=n(13),e=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"nginx"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nginx"}},[t._v("#")]),t._v(" Nginx")]),t._v(" "),s("h2",{attrs:{id:"基本概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[t._v("#")]),t._v(" 基本概念")]),t._v(" "),s("h3",{attrs:{id:"反向代理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#反向代理"}},[t._v("#")]),t._v(" 反向代理")]),t._v(" "),s("p",[t._v("代理对象是服务端。\n代理假装自己是服务器，实际上是中间件，负责把请求转发到真正的服务器里")]),t._v(" "),s("blockquote",[s("p",[t._v("客户端不知道具体是哪一台服务器提供的服务，类似 Nginx 做的事情")])]),t._v(" "),s("h3",{attrs:{id:"正向代理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#正向代理"}},[t._v("#")]),t._v(" 正向代理")]),t._v(" "),s("p",[t._v("代理对象是客户端。\n代理假装自己是合法请求客户端，实际上是中间件，负责从服务器获取数据")]),t._v(" "),s("blockquote",[s("p",[t._v("服务器不知道具体是哪一个客户端发起的请求，类似 VPN 做的事情")])]),t._v(" "),s("h3",{attrs:{id:"负载均衡"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#负载均衡"}},[t._v("#")]),t._v(" 负载均衡")]),t._v(" "),s("p",[t._v("假设有 3 台服务器被反向代理， 1 号服务器是 64g 运行内存， 2 号服务器 16g ，3 号服务器 8g ；\n那么我们希望 1 号服务器接收更多的请求，因为它性能更好。\n这个时候就需要用到 “负载均衡” 。")]),t._v(" "),s("h2",{attrs:{id:"nginx-的负载均衡策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nginx-的负载均衡策略"}},[t._v("#")]),t._v(" Nginx 的负载均衡策略")]),t._v(" "),s("p",[t._v("Nginx 提供的负载均衡策略有 2 种："),s("strong",[t._v("内置策略")]),t._v("和"),s("strong",[t._v("扩展策略")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"内置策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内置策略"}},[t._v("#")]),t._v(" 内置策略")]),t._v(" "),s("p",[t._v("内置策略为"),s("strong",[t._v("轮询")]),t._v("，"),s("strong",[t._v("加权轮询")]),t._v("，"),s("strong",[t._v("IP hash")]),t._v(" ，"),s("strong",[t._v("扩展策略")]),t._v("等等。只有你想不到的没有他做不到的。")]),t._v(" "),s("h4",{attrs:{id:"轮询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#轮询"}},[t._v("#")]),t._v(" 轮询")]),t._v(" "),s("p",[t._v("简单来说就是假设有 3 台服务器，代理按照顺序依次向服务器发起请求")]),t._v(" "),s("h4",{attrs:{id:"加权轮询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#加权轮询"}},[t._v("#")]),t._v(" 加权轮询")]),t._v(" "),s("p",[t._v("还是 3 台服务器，代理还是按照顺序依次向服务器发起请求，不一样的是：请求的时候，服务器的权重越大，越能收到代理发起的请求，被请求次数越多。")]),t._v(" "),s("h4",{attrs:{id:"动静分离"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#动静分离"}},[t._v("#")]),t._v(" 动静分离")]),t._v(" "),s("p",[t._v("项目里会存在一些不需要后台处理的静态资源，例如 jQuery.js 或者图片之类的。\n可以把这些静态资源存在 Nginx 里，只有动态资源再去请求服务器，这样就节省一些性能。")]),t._v(" "),s("h4",{attrs:{id:"ip-hash-非重点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ip-hash-非重点"}},[t._v("#")]),t._v(" IP Hash（非重点）")]),t._v(" "),s("p",[t._v("假设项目中使用了 session，有 3 台服务器提供服务，每台服务器上都有一个 Tomcat。\n因为 session 是存在于服务器里的，每有一台服务器就有一个 session，那么这时就存在 3 个 session。\n这种情况下不可能做 session 共享，一般我们的做法是把 session 放到 Redis 上。")]),t._v(" "),s("p",[t._v("现在 Nginx 提供一个算法，比如说固定的 IP 永远只能到达某台服务器上，这样就解决了 session 的问题。")]),t._v(" "),s("blockquote",[s("p",[t._v("不过这么做还是有问题，不仅会影响性能，而且假设某台服务器挂了，数据也就丢失了。还是不建议使用 IP Hash 。")])]),t._v(" "),s("h2",{attrs:{id:"nginx-常用命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nginx-常用命令"}},[t._v("#")]),t._v(" Nginx 常用命令")]),t._v(" "),s("p",[s("code",[t._v("cd /usr/local/nginx/sbin/")])]),t._v(" "),s("p",[s("code",[t._v("./nginx")]),t._v("\n启动 Nginx")]),t._v(" "),s("blockquote",[s("p",[t._v("也可以使用 "),s("code",[t._v("nginx.exe")]),t._v(" 启动（Windows 限定）")])]),t._v(" "),s("p",[s("code",[t._v("./nginx -s stop")]),t._v("\n停止 Nginx 服务，"),s("strong",[t._v("强制停止")])]),t._v(" "),s("p",[s("code",[t._v("./nginx -s quit")]),s("br"),t._v("\n安全退出 Nginx 服务，会一项一项的确保是安全退出")]),t._v(" "),s("p",[s("code",[t._v("./nginx -s reload")]),t._v("\n重新加载配置文件")]),t._v(" "),s("blockquote",[s("p",[t._v("如果 nginx.conf 配置文件被修改了，就需要重新加载，否则修改不会生效")])]),t._v(" "),s("p",[s("code",[t._v("ps aux | grep nginx")]),t._v("\n查看 Nginx 进程")]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),s("p",[t._v("如果连接不上 Nginx 服务，检查一下阿里云安全组或服务器防火墙相关端口是否开放！")])]),t._v(" "),s("p",[t._v("端口开放相关命令")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#开启")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("service")]),t._v(" firewalld start\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#重启")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("service")]),t._v(" firewalld restart\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#关闭")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("service")]),t._v(" firewalld stop\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看防火墙规则")]),t._v("\nfirewall-cmd --list-all\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查询8080端口是否开放")]),t._v("\nfirewall-cmd --query-port"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v("/tcp\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#开放80端口")]),t._v("\nfirewall-cmd --permanent --add-port"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("/tcp\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#移除8080端口")]),t._v("\nfirewall-cmd --permanent --remove-port"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v("/tcp\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#重启防火墙（修改配置后要重启防火墙）")]),t._v("\nfirewall-cmd --reload\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#参数解释")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("、firwal1-cmd:是Linux提供的操作firewall的一个工具：\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("、--permanent:表示设置为持久：\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("、-add-port:标识添加的端口：\n")])])]),s("h2",{attrs:{id:"nginx-文件配置解读"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nginx-文件配置解读"}},[t._v("#")]),t._v(" Nginx 文件配置解读")]),t._v(" "),s("h3",{attrs:{id:"gva-项目配置解读"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gva-项目配置解读"}},[t._v("#")]),t._v(" GVA 项目配置解读")]),t._v(" "),s("h4",{attrs:{id:"nginx-conf"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nginx-conf"}},[t._v("#")]),t._v(" nginx.conf")]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#虚拟主机的配置")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#监听宿主机4402端口,只要是4402端口的都被nginx转发")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("listen")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4402")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#域名可以有多个，用空格隔开")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server_name")]),t._v(" localhost")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#charset koi8-r;")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#access_log  logs/host.access.log  main;")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#对 "/" 启用反向代理')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v(" /usr/share/nginx/html/dist")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add_header")]),t._v(" Cache-Control "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0'")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try_files")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$uri")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$uri")]),t._v("/ /index.html")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#日志格式设定")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#$remote_addr与$http_x_forwarded_for用以记录客户端的ip地址；")]),t._v("\n   \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#对 "/api" 启用反向代理')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /api")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_set_header")]),t._v(" Host "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$http_host")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_set_header")]),t._v("  X-Real-IP "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$remote_addr")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_set_header")]),t._v(" X-Forwarded-For "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$proxy_add_x_forwarded_for")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_set_header")]),t._v(" X-Forwarded-Proto "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$scheme")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("rewrite")]),t._v(" ^/api/(.*)$ /"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v(" break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#重写url")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 这里的url是前端web服务的位置")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_pass")]),t._v(" http://192.168.3.22:4402")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置代理服务器的协议和地址")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"my-conf"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#my-conf"}},[t._v("#")]),t._v(" my.conf")]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 监听前端web端口")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("listen")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4402")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server_name")]),t._v(" localhost")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# server_name 192.168.3.22;")]),t._v("\n\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#charset koi8-r;")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#access_log  logs/host.access.log  main;")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v(" /usr/share/nginx/html")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add_header")]),t._v(" Cache-Control "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0'")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try_files")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$uri")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$uri")]),t._v("/ /index.html")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /api")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_set_header")]),t._v(" Host "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$http_host")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_set_header")]),t._v("  X-Real-IP "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$remote_addr")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_set_header")]),t._v(" X-Forwarded-For "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$proxy_add_x_forwarded_for")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_set_header")]),t._v(" X-Forwarded-Proto "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$scheme")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("rewrite")]),t._v(" ^/api/(.*)$ /"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v(" break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#重写")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 这里的url是请求后端服务的位置")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_pass")]),t._v(" http://192.168.3.22:4400")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置代理服务器的协议和地址")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"nginx-自带配置解读"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nginx-自带配置解读"}},[t._v("#")]),t._v(" Nginx 自带配置解读")]),t._v(" "),s("h4",{attrs:{id:"nginx-conf-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nginx-conf-2"}},[t._v("#")]),t._v(" nginx.conf")]),t._v(" "),s("h5",{attrs:{id:"下载版"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#下载版"}},[t._v("#")]),t._v(" 下载版")]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#user nobody;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("worker_processes")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#error_log logs/error.log;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#error_log logs/error.log notice;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#error_log logs/error.log info;")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#pid logs/nginx.pid;")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ------------以上为全局配置")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("events")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("worker_connections")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("http")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("include")]),t._v(" mime.types")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default_type")]),t._v(" application/octet-stream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#log_format main '$remote_addr - $remote_user [$time_local] \"$request\" '")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#                '$status $body_bytes_sent \"$http_referer\" '")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#                \'"$http_user_agent" "$http_x_forwarded_for"\';')]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#access_log logs/access.log main;")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sendfile")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("on")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#tcp_nopush on;")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#keepalive_timeout 0;")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("keepalive_timeout")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("65")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#gzip on;")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ----------以上为http配置")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# http默认端口为80")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("listen")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server_name")]),t._v(" localhost")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -----------以下为代理配置")]),t._v("\n\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#charset koi8-r;")]),t._v("\n\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#access_log logs/host.access.log main;")]),t._v("\n\n\t\t"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v(" html")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),t._v(" index.html index.htm")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#error_page 404 /404.html;")]),t._v("\n\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# redirect server error pages to the static page /50x.html")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("error_page")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("502")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("503")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("504")]),t._v(" /50x.html")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" = /50x.html")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v(" html")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# proxy the PHP scripts to Apache listening on 127.0.0.1:80")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#location ~ \\.php$ {")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# proxy_pass http://127.0.0.1;")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#}")]),t._v("\n\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#location ~ \\.php$ {")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# root html;")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# fastcgi_pass 127.0.0.1:9000;")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# fastcgi_index index.php;")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# fastcgi_param SCRIPT_FILENAME /scripts$fastcgi_script_name;")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# include fastcgi_params;")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#}")]),t._v("\n\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# deny access to .htaccess files, if Apache's document root")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# concurs with nginx's one")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#location ~ /\\.ht {")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# deny all;")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# another virtual host using mix of IP-, name-, and port-based configuration")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#server {")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# listen 8000;")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# listen somename:8080;")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# server_name somename alias another.alias;")]),t._v("\n\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# location / {")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# root html;")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# index index.html index.htm;")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# }")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#}")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# HTTPS server-----配置https代理转发相关")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#server {")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## https默认端口为443")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# listen 443 ssl;")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# server_name localhost;")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## -----------以下为代理配置")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ssl_certificate cert.pem;")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ssl_certificate_key cert.key;")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ssl_session_cache shared:SSL:1m;")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ssl_session_timeout 5m;")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ssl_ciphers HIGH:!aNULL:!MD5;")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ssl_prefer_server_ciphers on;")]),t._v("\n\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# location / {")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# root html;")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# index index.html index.htm;")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# }")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("h5",{attrs:{id:"简单易懂版"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简单易懂版"}},[t._v("#")]),t._v(" 简单易懂版")]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[t._v("全局配置\n\n"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("events")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("worker_connections")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("http")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("http配置")]),t._v("\n\n\tupstream 负载均衡名字")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t// 负载均衡配置\n\n\t\t// 配置服务器\n\t\t// "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")]),t._v(" 服务器url:端口号 权重")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")]),t._v(" 127.0.0.1:8080 weight=1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")]),t._v(" 127.0.0.1:8081 weight=1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("listen")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server_name")]),t._v("   localhost")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t// 代理配置\n\n\t\t// "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location配置（重要）")]),t._v("\n\t\tlocation /")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t// 假设 "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("80")]),t._v(" 端口使用 A服务器\n\t\t\troot /a1/aa1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t\t\t// 设置主页\n\t\t\tindex 主页文件路径\n\n\t\t\t// 配置反向代理\n\t\t\tproxy_pass 负载均衡名字\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t\t//\n\t\t"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /admin")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t// 假设 "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("localhost/admin")]),t._v(" 使用 B服务器，那么此时就可以区分开“/”\n\t\t\troot /a2/aa1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("listen")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("443")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server_name")]),t._v("   localhost")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t// 代理配置\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h5",{attrs:{id:"详解版"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#详解版"}},[t._v("#")]),t._v(" 详解版")]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 定义Nginx运行的用户和用户组，多个用户和用户组使用空格隔开")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("user")]),t._v(" www www")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# nginx进程数，建议设置为等于CPU总核心数。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("worker_processes")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 全局错误日志定义类型，[ debug | info | notice | warn | error | crit ]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("error_log")]),t._v(" /usr/local/nginx/logs/error.log info")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 进程pid文件")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pid")]),t._v(" /usr/local/nginx/logs/nginx.pid")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#指定进程可以打开的最大描述符：数目")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#工作模式与连接数上限")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#这个指令是指当一个nginx进程打开的最多文件描述符数目，理论值应该是最多打开文件数（ulimit -n）与nginx进程数相除，但是nginx分配请求并不是那么均匀，所以最好与ulimit -n 的值保持一致。")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#现在在linux 2.6内核下开启文件打开数为65535，worker_rlimit_nofile就相应应该填写65535。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#这是因为nginx调度时分配请求到进程并不是那么的均衡，所以假如填写10240，总并发量达到3-4万时就有进程可能超过10240了，这时会返回502错误。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("worker_rlimit_nofile")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("65535")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# --------以上为全局配置")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("events")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 参考事件模型，use [ kqueue | rtsig | epoll | /dev/poll | select | poll ]; epoll模型")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 是Linux 2.6以上版本内核中的高性能网络I/O模型，linux建议epoll，如果跑在FreeBSD上面，就用kqueue模型。")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 补充说明：")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 与apache相类，nginx针对不同的操作系统，有不同的事件模型")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# A）标准事件模型")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Select、poll属于标准事件模型，如果当前系统不存在更有效的方法，nginx会选择select或poll")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# B）高效事件模型")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Kqueue：使用于FreeBSD 4.1+, OpenBSD 2.9+, NetBSD 2.0 和 MacOS X.使用双处理器的MacOS X系统使用kqueue可能会造成内核崩溃。")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Epoll：使用于Linux内核2.6版本及以后的系统。")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# /dev/poll：使用于Solaris 7 11/99+，HP/UX 11.22+ (eventport)，IRIX 6.5.15+ 和 Tru64 UNIX 5.1A+。")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Eventport：使用于Solaris 10。 为了防止出现内核崩溃的问题， 有必要安装安全补丁。")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" epoll")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 单个进程最大连接数（最大连接数=连接数*进程数）")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 根据硬件调整，和前面工作进程配合起来用，尽量大，但是别把cpu跑到100%就行。每个进程允许的最多连接数，理论上每台nginx服务器的最大连接数为65535。")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("worker_connections")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("65535")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#keepalive超时时间。")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("keepalive_timeout")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#客户端请求头部的缓冲区大小。这个可以根据你的系统分页大小来设置，一般一个请求头的大小不会超过1k，不过由于一般系统分页都要大于1k，所以这里设置为分页大小。")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#分页大小可以用命令getconf PAGESIZE 取得。")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#[root@web001 ~]# getconf PAGESIZE")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#4096")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#但也有client_header_buffer_size超过4k的情况，但是client_header_buffer_size该值必须设置为“系统分页大小”的整倍数。")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("client_header_buffer_size")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4k")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#这个将为打开文件指定缓存，默认是没有启用的，max指定缓存数量，建议和打开文件数一致，inactive是指经过多长时间文件没被请求后删除缓存。")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("open_file_cache")]),t._v(" max=65535 inactive=60s")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#这个是指多长时间检查一次缓存的有效信息。")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#语法:open_file_cache_valid time 默认值:open_file_cache_valid 60 使用字段:http, server, location 这个指令指定了何时需要检查open_file_cache中缓存项目的有效信息.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("open_file_cache_valid")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80s")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#open_file_cache指令中的inactive参数时间内文件的最少使用次数，如果超过这个数字，文件描述符一直是在缓存中打开的，如上例，如果有一个文件在inactive时间内一次没被使用，它将被移除。")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#语法:open_file_cache_min_uses number 默认值:open_file_cache_min_uses 1 使用字段:http, server, location  这个指令指定了在open_file_cache指令无效的参数中一定的时间范围内可以使用的最小文件数,如果使用更大的值,文件描述符在cache中总是打开状态.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("open_file_cache_min_uses")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#语法:open_file_cache_errors on | off 默认值:open_file_cache_errors off 使用字段:http, server, location 这个指令指定是否在搜索一个文件是记录cache错误.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("open_file_cache_errors")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("on")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设定http服务器，利用它的反向代理功能提供负载均衡支持")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("http")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#文件扩展名与文件类型映射表")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("include")]),t._v(" mime.types")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#默认文件类型")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default_type")]),t._v(" application/octet-stream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#默认编码")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#charset utf-8;")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#服务器名字的hash表大小")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#保存服务器名字的hash表是由指令server_names_hash_max_size 和server_names_hash_bucket_size所控制的。参数hash bucket size总是等于hash表的大小，并且是一路处理器缓存大小的倍数。在减少了在内存中的存取次数后，使在处理器中加速查找hash表键值成为可能。如果hash bucket size等于一路处理器缓存的大小，那么在查找键的时候，最坏的情况下在内存中查找的次数为2。第一次是确定存储单元的地址，第二次是在存储单元中查找键 值。因此，如果Nginx给出需要增大hash max size 或 hash bucket size的提示，那么首要的是增大前一个参数的大小.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server_names_hash_bucket_size")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("128")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#客户端请求头部的缓冲区大小。这个可以根据你的系统分页大小来设置，一般一个请求的头部大小不会超过1k，不过由于一般系统分页都要大于1k，所以这里设置为分页大小。分页大小可以用命令getconf PAGESIZE取得。")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("client_header_buffer_size")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("32k")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#客户请求头缓冲大小。nginx默认会用client_header_buffer_size这个buffer来读取header值，如果header过大，它会使用large_client_header_buffers来读取。")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("large_client_header_buffers")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("64k")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设定通过nginx上传文件的大小")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("client_max_body_size")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8m")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#开启高效文件传输模式，sendfile指令指定nginx是否调用sendfile函数来输出文件，对于普通应用设为 on，如果用来进行下载等应用磁盘IO重负载应用，可设置为off，以平衡磁盘与网络I/O处理速度，降低系统的负载。注意：如果图片显示不正常把这个改成off。")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#sendfile指令指定 nginx 是否调用sendfile 函数（zero copy 方式）来输出文件，对于普通应用，必须设为on。如果用来进行下载等应用磁盘IO重负载应用，可设置为off，以平衡磁盘与网络IO处理速度，降低系统uptime。")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sendfile")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("on")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#开启目录列表访问，合适下载服务器，默认关闭。")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("autoindex")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("on")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#此选项允许或禁止使用socke的TCP_CORK的选项，此选项仅在使用sendfile的时候使用")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("tcp_nopush")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("on")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("tcp_nodelay")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("on")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#长连接超时时间，单位是秒")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("keepalive_timeout")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("120")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#FastCGI相关参数是为了改善网站的性能：减少资源占用，提高访问速度。下面参数看字面意思都能理解。")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fastcgi_connect_timeout")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fastcgi_send_timeout")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fastcgi_read_timeout")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fastcgi_buffer_size")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("64k")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fastcgi_buffers")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("64k")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fastcgi_busy_buffers_size")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("128k")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fastcgi_temp_file_write_size")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("128k")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#gzip模块设置")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("gzip")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("on")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#开启gzip压缩输出")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("gzip_min_length")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1k")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#最小压缩文件大小")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("gzip_buffers")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("16k")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#压缩缓冲区")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("gzip_http_version")]),t._v(" 1.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#压缩版本（默认1.1，前端如果是squid2.5请使用1.0）")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("gzip_comp_level")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#压缩等级")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("gzip_types")]),t._v(" text/plain application/x-javascript text/css application/xml")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#压缩类型，默认就已经包含textml，所以下面就不用再写了，写上去也不会有问题，但是会有一个warn。")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("gzip_vary")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("on")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#开启限制IP连接数的时候需要使用")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#limit_zone crawler $binary_remote_addr 10m;")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#负载均衡配置")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("upstream")]),t._v(" piao.jd.com")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#upstream的负载均衡，weight是权重，可以根据机器配置定义权重。weigth参数表示权值，权值越高被分配到的几率越大。")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")]),t._v(" 192.168.80.121:80 weight=3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")]),t._v(" 192.168.80.122:80 weight=2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")]),t._v(" 192.168.80.123:80 weight=3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#nginx的upstream目前支持4种方式的分配")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1、轮询（默认）")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#每个请求按时间顺序逐一分配到不同的后端服务器，如果后端服务器down掉，能自动剔除。")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#2、weight")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#指定轮询几率，weight和访问比率成正比，用于后端服务器性能不均的情况。")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#例如：")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#upstream bakend {")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    server 192.168.0.14 weight=10;")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    server 192.168.0.15 weight=10;")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#2、ip_hash")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#每个请求按访问ip的hash结果分配，这样每个访客固定访问一个后端服务器，可以解决session的问题。")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#例如：")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#upstream bakend {")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    ip_hash;")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    server 192.168.0.14:88;")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    server 192.168.0.15:80;")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#3、fair（第三方）")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#按后端服务器的响应时间来分配请求，响应时间短的优先分配。")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#upstream backend {")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    server server1;")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    server server2;")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    fair;")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#4、url_hash（第三方）")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#按访问url的hash结果来分配请求，使每个url定向到同一个后端服务器，后端服务器为缓存时比较有效。")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#例：在upstream中加入hash语句，server语句中不能写入weight等其他的参数，hash_method是使用的hash算法")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#upstream backend {")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    server squid1:3128;")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    server squid2:3128;")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    hash $request_uri;")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    hash_method crc32;")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#tips:")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#upstream bakend{#定义负载均衡设备的Ip及设备状态}{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    ip_hash;")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    server 127.0.0.1:9090 down;")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    server 127.0.0.1:8080 weight=2;")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    server 127.0.0.1:6060;")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    server 127.0.0.1:7070 backup;")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#在需要使用负载均衡的server中增加 proxy_pass http://bakend/;")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#每个设备的状态设置为:")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1.down表示单前的server暂时不参与负载")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#2.weight为weight越大，负载的权重就越大。")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#3.max_fails：允许请求失败的次数默认为1.当超过最大次数时，返回proxy_next_upstream模块定义的错误")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#4.fail_timeout:max_fails次失败后，暂停的时间。")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#5.backup： 其它所有的非backup机器down或者忙的时候，请求backup机器。所以这台机器压力会最轻。")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#nginx支持同时设置多组的负载均衡，用来给不用的server来使用。")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#client_body_in_file_only设置为On 可以讲client post过来的数据记录到文件中用来做debug")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#client_body_temp_path设置记录文件的目录 可以设置最多3层目录")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#location对URL进行匹配.可以进行重定向或者进行新的代理 负载均衡")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ------------以上均为http相关的全局配置")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#虚拟主机的配置")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#监听端口，80为http的默认端口")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("listen")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#域名可以有多个，用空格隔开")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server_name")]),t._v(" www.jd.com jd.com")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),t._v(" index.html index.htm index.php")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v(" /data/www/jd")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#对******进行负载均衡")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" ~ .*.(php|php5)?$")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fastcgi_pass")]),t._v(" 127.0.0.1:9000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fastcgi_index")]),t._v(" index.php")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("include")]),t._v(" fastcgi.conf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#图片缓存时间设置")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" ~ .*.(gif|jpg|jpeg|png|bmp|swf)$")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("expires")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10d")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#JS和CSS缓存时间设置")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" ~ .*.(js|css)?$")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("expires")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1h")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#日志格式设定")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#$remote_addr与$http_x_forwarded_for用以记录客户端的ip地址；")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#$remote_user：用来记录客户端用户名称；")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#$time_local： 用来记录访问时间与时区；")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#$request： 用来记录请求的url与http协议；")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#$status： 用来记录请求状态；成功是200，")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#$body_bytes_sent ：记录发送给客户端文件主体内容大小；")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#$http_referer：用来记录从那个页面链接访问过来的；")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#$http_user_agent：记录客户浏览器的相关信息；")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#通常web服务器放在反向代理的后面，这样就不能获取到客户的IP地址了，通过$remote_add拿到的IP地址是反向代理服务器的iP地址。反向代理服务器在转发请求的http头信息中，可以增加x_forwarded_for信息，用以记录原有客户端的IP地址和原来客户端的请求的服务器地址。")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("log_format")]),t._v(" access "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$remote_addr")]),t._v(" - "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$remote_user")]),t._v(" ["),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$time_local]")]),t._v(' "'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$request")]),t._v("\" '")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$status")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$body_bytes_sent")]),t._v(' "'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$http_referer")]),t._v("\" '")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\""),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$http_user_agent")]),t._v('" '),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$http_x_forwarded_for")]),t._v("'")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#定义本虚拟主机的访问日志")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("access_log")]),t._v("  /usr/local/nginx/logs/host.access.log  main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("access_log")]),t._v("  /usr/local/nginx/logs/host.access.404.log  log404")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#对 "/" 启用反向代理')]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_pass")]),t._v(" http://127.0.0.1:88")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_redirect")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("off")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_set_header")]),t._v(" X-Real-IP "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$remote_addr")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#后端的Web服务器可以通过X-Forwarded-For获取用户真实IP")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_set_header")]),t._v(" X-Forwarded-For "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$proxy_add_x_forwarded_for")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#以下是一些反向代理的配置，可选。")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_set_header")]),t._v(" Host "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$host")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#允许客户端请求的最大单文件字节数")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("client_max_body_size")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10m")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#缓冲区代理缓冲用户端请求的最大字节数，")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#如果把它设置为比较大的数值，例如256k，那么，无论使用firefox还是IE浏览器，来提交任意小于256k的图片，都很正常。如果注释该指令，使用默认的client_body_buffer_size设置，也就是操作系统页面大小的两倍，8k或者16k，问题就出现了。")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#无论使用firefox4.0还是IE8.0，提交一个比较大，200k左右的图片，都返回500 Internal Server Error错误")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("client_body_buffer_size")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("128k")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#表示使nginx阻止HTTP应答代码为400或者更高的应答。")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_intercept_errors")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("on")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#后端服务器连接的超时时间_发起握手等候响应超时时间")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#nginx跟后端服务器连接超时时间(代理连接超时)")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_connect_timeout")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#后端服务器数据回传时间(代理发送超时)")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#后端服务器数据回传时间_就是在规定时间之内后端服务器必须传完所有的数据")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_send_timeout")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#连接成功后，后端服务器响应时间(代理接收超时)")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#连接成功后_等候后端服务器响应时间_其实已经进入后端的排队之中等候处理（也可以说是后端服务器处理请求的时间）")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_read_timeout")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设置代理服务器（nginx）保存用户头信息的缓冲区大小")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设置从被代理服务器读取的第一部分应答的缓冲区大小，通常情况下这部分应答中包含一个小的应答头，默认情况下这个值的大小为指令proxy_buffers中指定的一个缓冲区的大小，不过可以将其设置为更小")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_buffer_size")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4k")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#proxy_buffers缓冲区，网页平均在32k以下的设置")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设置用于读取应答（来自被代理服务器）的缓冲区数目和大小，默认情况也为分页大小，根据操作系统的不同可能是4k或者8k")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_buffers")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("32k")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#高负荷下缓冲大小（proxy_buffers*2）")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_busy_buffers_size")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("64k")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设置在写入proxy_temp_path时数据的大小，预防一个工作进程在传递文件时阻塞太长")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设定缓存文件夹大小，大于这个值，将从upstream服务器传")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_temp_file_write_size")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("64k")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设定查看Nginx状态的地址")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /NginxStatus")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("stub_status")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("on")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("access_log")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("on")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auth_basic")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"NginxStatus"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auth_basic_user_file")]),t._v(" confpasswd")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#htpasswd文件的内容可以用apache提供的htpasswd工具来产生。")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#本地动静分离反向代理配置")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#所有jsp的页面均交由tomcat或resin处理")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" ~ .(jsp|jspx|do)?$")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_set_header")]),t._v(" Host "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$host")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_set_header")]),t._v(" X-Real-IP "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$remote_addr")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_set_header")]),t._v(" X-Forwarded-For "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$proxy_add_x_forwarded_for")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_pass")]),t._v(" http://127.0.0.1:8080")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#所有静态文件由nginx直接读取不经过tomcat或resin")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" ~ .*.(htm|html|gif|jpg|jpeg|png|bmp|swf|ioc|rar|zip|txt|flv|mid|doc|ppt|\n        pdf|xls|mp3|wma)$")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("expires")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15d")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" ~ .*.(js|css)?$")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("expires")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1h")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);