(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{280:function(t,s,a){"use strict";a.r(s);var e=a(13),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"express"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#express"}},[t._v("#")]),t._v(" Express")]),t._v(" "),s("h2",{attrs:{id:"_1、后端框架"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、后端框架"}},[t._v("#")]),t._v(" 1、后端框架")]),t._v(" "),s("h2",{attrs:{id:"_2、express"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、express"}},[t._v("#")]),t._v(" 2、express")]),t._v(" "),s("ul",[s("li",[t._v("创建项目目录")])]),t._v(" "),s("div",{staticClass:"language-bat extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("mkdir hello\n")])])]),s("ul",[s("li",[t._v("初始化项目")])]),t._v(" "),s("p",[t._v("首先确保进入到新创建的项目目录中:")]),t._v(" "),s("div",{staticClass:"language-bat extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("cd hello\n")])])]),s("p",[t._v("初始化项目:")]),t._v(" "),s("div",{staticClass:"language-bat extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("npm init --yes\n")])])]),s("p",[t._v("项目初始化后，在项目目录下会产生一个 "),s("code",[t._v("package.json")]),t._v(" 文件，该文件就是当前项目的描述文件。")]),t._v(" "),s("ul",[s("li",[t._v("安装"),s("code",[t._v("express")])])]),t._v(" "),s("p",[t._v("确保已经进入到项目目录中，随后执行:")]),t._v(" "),s("div",{staticClass:"language-bat extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("npm install --save express\n")])])]),s("p",[t._v("或")]),t._v(" "),s("div",{staticClass:"language-bat extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("npm install -S express\n")])])]),s("p",[t._v("或")]),t._v(" "),s("div",{staticClass:"language-bat extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("npm install express\n")])])]),s("p",[t._v("这里的 "),s("code",[t._v("--save")]),t._v(" 、"),s("code",[t._v("-S")]),t._v(" 都表示将依赖安装到 "),s("code",[t._v("dependencies")]),t._v(" 中。\n新版的 npm 默认就是将依赖安装到  "),s("code",[t._v("dependencies")]),t._v(" 中，因此可以省略 "),s("code",[t._v("--save")]),t._v(" 、"),s("code",[t._v("-S")])]),t._v(" "),s("ul",[s("li",[t._v("创建 "),s("code",[t._v("app.js")])])]),t._v(" "),s("p",[t._v("其中内容如下:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 导入 express 模块")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" express "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'express'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" port "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过调用 express 函数创建一个应用实例")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" app "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("express")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当采用 GET 方式访问 / 时就调用第二个参数表示的函数")]),t._v("\napp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("resp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" content "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("<h3>Hello,Express.</h3>")]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    resp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" content "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 监听指定的端口")]),t._v("\napp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("listen")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" port "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ul",[s("li",[t._v("创建脚本")])]),t._v(" "),s("p",[t._v("在 "),s("code",[t._v("package.json")]),t._v(" 中找到 "),s("code",[t._v("scripts")]),t._v(" 节点，并在其中添加 "),s("code",[t._v("start")]),t._v(" 脚本:")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"scripts"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"start"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nodemon app.js"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"test"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"echo \\"Error: no test specified\\" && exit 1"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),s("p",[t._v("这里的 "),s("code",[t._v("nodemon")]),t._v(" 是用来运行 "),s("code",[t._v("app.js")]),t._v(" 的一个组件。\nnodemon 是全局安装的一个组件:")]),t._v(" "),s("div",{staticClass:"language-bat extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("npm install -g nodemon\n")])])]),s("p",[t._v("或者也可以通过以下方式安装:")]),t._v(" "),s("div",{staticClass:"language-bat extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("npm install --global nodemon\n")])])]),s("ul",[s("li",[t._v("启动服务")])]),t._v(" "),s("p",[t._v("可以通过运行 "),s("code",[t._v("start")]),t._v(" 脚本来启动服务:")]),t._v(" "),s("div",{staticClass:"language-bat extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("npm run start\n")])])]),s("p",[t._v("或者使用以下方式:")]),t._v(" "),s("div",{staticClass:"language-bat extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("npm start\n")])])]),s("h2",{attrs:{id:"_3、配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、配置"}},[t._v("#")]),t._v(" 3、配置")]),t._v(" "),s("h3",{attrs:{id:"_3-1、处理静态资源"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1、处理静态资源"}},[t._v("#")]),t._v(" 3.1、处理静态资源")]),t._v(" "),s("p",[t._v("通过 "),s("code",[t._v("express.static")]),t._v(" 返回的中间件来处理静态资源:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 根据指定的目录名解析为绝对路径，并以此为静态资源根目录")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" assets "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'public'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过调用 express 的 static 函数来得到用于处理 静态资源的 中间件(middleware)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" staticMiddleware "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" express"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("static")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("assets"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在整个应用中启用 中间件(middleware)")]),t._v("\napp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("use")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" staticMiddleware "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"_3-2、处理表单数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2、处理表单数据"}},[t._v("#")]),t._v(" 3.2、处理表单数据")]),t._v(" "),s("h4",{attrs:{id:"_3-2-1、表单的提交方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-1、表单的提交方式"}},[t._v("#")]),t._v(" 3.2.1、表单的提交方式")]),t._v(" "),s("p",[t._v("在浏览器中表单的提交方式可以是 GET 、POST :")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("form")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("action")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("/register"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("method")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("post"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("form")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("form")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("action")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("/login"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("method")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("get"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("form")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("h4",{attrs:{id:"_3-2-2、表单的编码方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-2、表单的编码方式"}},[t._v("#")]),t._v(" 3.2.2、表单的编码方式")]),t._v(" "),s("p",[t._v("因为通过 GET 方式提交表单时，表单中的数据是附着在 URL 中，通过 query string 形式传递的，所以不涉及 这里的 "),s("code",[t._v("enctype")]),t._v(" 属性。")]),t._v(" "),s("p",[t._v("当通过 POST 方式提交表单时，enctype 属性值才有效。")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://www.runoob.com/tags/att-form-enctype.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("菜鸟教程"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://www.w3school.com.cn/tags/att_form_enctype.asp",target:"_blank",rel:"noopener noreferrer"}},[t._v("w3school"),s("OutboundLink")],1)])]),t._v(" "),s("h4",{attrs:{id:"_3-2-3、用中间件处理表单数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-3、用中间件处理表单数据"}},[t._v("#")]),t._v(" 3.2.3、用中间件处理表单数据")]),t._v(" "),s("h5",{attrs:{id:"_1、处理-application-x-www-form-urlencoded-编码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、处理-application-x-www-form-urlencoded-编码"}},[t._v("#")]),t._v(" 1、处理 "),s("code",[t._v("application/x-www-form-urlencoded")]),t._v(" 编码")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 获得可以处理 "application/x-www-form-urlencoded" 编码的请求体')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" urlencodedMiddleware "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" express"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("urlencoded")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("extended")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在整个应用中启用 中间件(middleware)")]),t._v("\napp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("use")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" urlencodedMiddleware "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h5",{attrs:{id:"_2、处理-text-plain-编码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、处理-text-plain-编码"}},[t._v("#")]),t._v(" 2、处理 "),s("code",[t._v("text/plain")]),t._v(" 编码")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 获得可以处理 "text/plain" 编码的请求体的中间件')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" textPlainMiddleware "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" express"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("text")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\napp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("use")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" textPlainMiddleware "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h5",{attrs:{id:"_3、处理-multipart-form-data-编码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、处理-multipart-form-data-编码"}},[t._v("#")]),t._v(" 3、处理 "),s("code",[t._v("multipart/form-data")]),t._v(" 编码")]),t._v(" "),s("p",[t._v("下载multer组件"),s("code",[t._v("npm install multer")]),t._v("\n真的不知道咋写笔记了。。看看这个链接里面的内容"),s("a",{attrs:{href:"https://gitee.com/mozicoding/frameworks/blob/master/req/routes/explore.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("韩老师上课内容"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"_4、路由"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、路由"}},[t._v("#")]),t._v(" 4、路由")]),t._v(" "),s("p",[t._v("通过 客户端的 "),s("code",[t._v("请求方式")]),t._v(" 和 "),s("code",[t._v("请求路径")]),t._v(" 来确定应该调用哪个函数。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("请求方式\n在 HTTP 协议中，请求方式也称作 HTTP 动作 ( HTTP Action ) 。\n在 HTTP 1.0 中，请求方式包括 GET 、POST、HEAD 。\n在 HTTP 1.1 中，新增了 OPTIONS、PUT、DELETE、TRACE、CONNECT\n在中间件函数中可以通过 "),s("code",[t._v("req.method")]),t._v(" 来获取请求方式。")])]),t._v(" "),s("li",[s("p",[t._v("请求路径\n即用户发送请求时使用的地址，比如 "),s("code",[t._v("/login")]),t._v(" 、"),s("code",[t._v("/register")])])]),t._v(" "),s("li",[s("p",[t._v("获取请求参数:\n若要从POST表单中获取请求数据则可以通过 "),s("code",[t._v("req.body")]),t._v(" 来实现\n若要从"),s("code",[t._v("query string")]),t._v(" 中获取请求数据则可以通过 "),s("code",[t._v("req.query")]),t._v(" 来获取")])])]),t._v(" "),s("p",[s("code",[t._v("response.end()")]),t._v("跟"),s("code",[t._v("response.send()")]),t._v("作用类似，可以结束请求，括号里可以写想要显示在页面上的返回内容。")]),t._v(" "),s("blockquote",[s("p",[t._v("注意：需要设置请求头(?)，不然返回内容会乱码。")])]),t._v(" "),s("p",[s("code",[t._v("request.params")]),t._v("可以获得 通过 请求路径 传递的 参数 。返回字符串类型。\n"),s("code",[t._v("response.redirect(路径)")]),t._v("可以重新定向到指定的路径")]),t._v(" "),s("h4",{attrs:{id:"获得请求内容"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#获得请求内容"}},[t._v("#")]),t._v(" 获得请求内容")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("request.method")]),t._v("获得请求方式")]),t._v(" "),s("li",[s("code",[t._v("request.url")]),t._v("获得请求路径")]),t._v(" "),s("li",[s("code",[t._v("request.protocol")]),t._v(" 获得http协议")]),t._v(" "),s("li",[s("code",[t._v("req.httpVersion")]),t._v("获得http版本")]),t._v(" "),s("li",[s("code",[t._v("request.head")]),t._v("获得请求头")]),t._v(" "),s("li",[s("code",[t._v("request.body")]),t._v("获得请求体")])]),t._v(" "),s("h4",{attrs:{id:"创建路由容器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建路由容器"}},[t._v("#")]),t._v(" 创建路由容器")]),t._v(" "),s("p",[t._v("创建一个路由容器 "),s("code",[t._v("let router = express.Router()")])]),t._v(" "),s("h2",{attrs:{id:"_5、文件管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5、文件管理"}},[t._v("#")]),t._v(" 5、文件管理")]),t._v(" "),s("p",[t._v("使用multer组件"),s("a",{attrs:{href:"https://blog.csdn.net/heal_l/article/details/120074195",target:"_blank",rel:"noopener noreferrer"}},[t._v("csdn介绍"),s("OutboundLink")],1),t._v("\n[[files文件管理系统.js]]")]),t._v(" "),s("h3",{attrs:{id:"express-session模块原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#express-session模块原理"}},[t._v("#")]),t._v(" express-session模块原理")]),t._v(" "),s("p",[t._v("浏览器首次采用get方式访问"),s("code",[t._v("user/sign/in")]),t._v("时，因为get(user/sign/in)中使用了req.session，所以get(user/sign/in)除了渲染"),s("code",[t._v("views/user/sign-in.njk")]),t._v("页面外，还会将与session对应的一个cookie通过响应头发送到客户端\n相当于"),s("code",[t._v("resp.setHeader('set-cookie','cookie内容');")]),t._v("\n浏览器在接收到服务端的响应后，首先将cookie保存至本地（浏览器端），然后将响应正文呈现在用户面前")]),t._v(" "),s("p",[t._v("当浏览器再次访问同一个站点时，就会通过请求头将已经保存的cookie回传给服务器\n服务器如果接收到名称是SESSIONID（自己设置的cookie名称）的cookie，则寻找与之对应的session对象：")]),t._v(" "),s("ul",[s("li",[t._v("如果找到与SESSIONID对应的session对象，则认为该session对象就是当前浏览器端对应的 会话对象，此后与该浏览器端对应的所有请求都可以访问该session对象中的数据。")]),t._v(" "),s("li",[t._v("如果未找到与SESSIONID对应的session对象，则重新创建一个会话对象（session），并伴随本次响应重新向浏览器发送cookie。浏览器在接收到cookie后会保存至本地。")])])])}),[],!1,null,null,null);s.default=n.exports}}]);